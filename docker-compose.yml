version: '3.7'

volumes:
  persist_volume:

networks:
  kong-net:
    external: false

services:

  # db:
  #   image: postgres:9.6
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${KONG_DB_NAME}
  #     POSTGRES_USER: ${KONG_DB_USERNAME}
  #     POSTGRES_PASSWORD: ${KONG_DB_PASSWORD}
  #   ports:
  #     - ${KONG_DB_PORT}:5432
  #   healthcheck:
  #     test: ["CMD", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - persist_volume:/var/lib/postgresql/data
  #   networks:
  #     - kong-net

    db:
      image: postgres:9.6
      environment:
        POSTGRES_DB: ${KONG_DB_NAME}
        POSTGRES_USER: ${KONG_DB_USERNAME}
        POSTGRES_PASSWORD: ${KONG_DB_PASSWORD}
        # POSTGRES_USERS: ${KONG_DB_USERNAME}:${KONG_DB_PASSWORD}|${KONGA_DB_USERNAME}:${KONGA_DB_PASSWORD}
        # POSTGRES_DATABASES: ${KONG_DB_NAME}:${KONG_DB_USERNAME}|${KONGA_DB_NAME}:${KONGA_DB_USERNAME}
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 30s
        timeout: 30s
        retries: 3
      ports:
        - ${KONG_DB_PORT}:5432
      restart: on-failure
      stdin_open: true
      tty: true
      volumes:
      - persist_volume:/var/lib/postgresql/data
      networks:
      - kong-net

    kong-migrations:
      image: kong:latest
      entrypoint: sh -c "sleep 10 && kong migrations bootstrap -v"
      environment:
        KONG_DATABASE: ${KONG_DATABASE}
        KONG_PG_HOST: ${KONG_DB_HOST}
        KONG_PG_DATABASE: ${KONG_DB_NAME}
        KONG_PG_USER: ${KONG_DB_USERNAME}
        KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
      depends_on:
      - db
      networks:
      - kong-net
      restart: on-failure

    kong:
      image: kong:latest
      environment:
        KONG_DATABASE: ${KONG_DATABASE}
        KONG_PG_HOST: ${KONG_DB_HOST}
        KONG_PG_DATABASE: ${KONG_DB_NAME}
        KONG_PG_USER: ${KONG_DB_USERNAME}
        KONG_PG_PASSWORD: ${KONG_DB_PASSWORD}
        KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
        KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
        KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
        KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
        KONG_ADMIN_LISTEN: ${KONG_ADMIN_LISTEN}
        # KONG_PROXY_LISTEN: 127.0.0.1:8000
        # KONG_PROXY_LISTEN_SSL: 127.0.0.1:8443
      restart: on-failure
      depends_on:
        - db
        - kong-migrations
      ports:
        - $KONG_PROXY_PORT:8000
        - $KONG_PROXY_SSL_PORT:8443
        - $KONG_PROXY_ADMIN_API_PORT:8001
        - $KONG_PROXY_ADMIN_SSL_API_PORT:8444
      networks:
      - kong-net

    #######################################
    # Konga database prepare
    #######################################
    konga-prepare:
      image: pantsel/konga:next
      command: "-c prepare -a postgres -u postgresql://${KONG_DB_USERNAME}:${KONG_DB_PASSWORD}@${KONG_DB_HOST}:${KONG_DB_PORT}/${KONGA_DB_NAME}"
      networks:
        - kong-net
      restart: on-failure
      links:
        - db
      depends_on:
        - db
        - kong-migrations
        - kong


    #######################################
    # Konga
    #######################################
    konga:
      image: pantsel/konga
      environment:
        TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
        DB_ADAPTER:  ${KONG_DATABASE}
        DB_HOST: db
        DB_PORT: ${KONGA_DB_PORT}
        DB_DATABASE: ${KONGA_DB_NAME}
        DB_USER: ${KONGA_DB_USERNAME}
        DB_PASSWORD: ${KONGA_DB_PASSWORD}
        NODE_ENV: development
        KONGA_HOOK_TIMEOUT: 10000
      restart: on-failure
      ports:
        - $KONGA_PORT:1337
      depends_on:
        - db
        - konga-prepare
        - kong
      networks:
        - kong-net
    
    # konga:
    #   image: pantsel/konga
    #   environment:
    #     TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
    #     DB_ADAPTER: ${KONG_DATABASE}
    #     DB_HOST: ${KONGA_DB_HOST}
    #     DB_PORT: ${KONGA_DB_PORT}
    #     DB_DATABASE: ${KONGA_DB_NAME}
    #     DB_USER: ${KONGA_DB_USERNAME}
    #     DB_PASSWORD: ${KONGA_DB_PASSWORD}
    #     NODE_ENV: ${KONGA_ENV}
    #     KONGA_HOOK_TIMEOUT: 10000
    #   restart: on-failure
    #   ports:
    #   - $KONGA_PORT:1337
    #   depends_on:
    #   - db
    #   networks:
    #   - kong-net